{"mappings":"IASAA,EAToBC,MAAOC,EAAYC,EAAMC,KAC3CF,EAAWG,IAAI,OAAQF,GACvBD,EAAWG,IAAI,IAAKD,EAAME,QAAQ,IAAK,MACvC,MAAMC,QAAiBC,MACrB,4BAA4BN,EAAWO,cAGzC,aADqBF,EAASG,QCNhC,IAAIC,EAAe,GACnB,MAAMC,EAAUC,SAASC,cAAc,Y,IAsCvCC,EArCsB,CAACC,EAASC,EAASC,KACrB,IAAdA,IACFP,EAAe,IAGjB,IAAK,IAAIQ,EAAI,EAAGA,EAAIH,EAAQI,KAAKC,OAAQF,GAAK,EAAG,CAC/C,MAAMG,aAEJA,EAAYC,cACZA,EAAaC,MACbA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACEX,EAAQI,KAAKD,GACjBF,GAAW,yCACDK,uIAGQE,+DAGAC,kEAGGC,mEAGCC,gCAOxB,OAFAhB,GAAgBM,EAChBL,EAAQgB,UAAYjB,EACbM,G,IC7BTY,EAR4B,KAC1B,MAAMC,EAAejB,SAASkB,iBAAiB,eAC/C,IAAK,MAAMC,KAAQF,EACjBE,EAAKC,MAAMC,OAAS,kBACpBF,EAAKC,MAAME,OAAS,mBACpBH,EAAKC,MAAMG,MAAQ,UCEvB,MAAMC,EAAaxB,SAASC,cAAc,gBACpCwB,EAAczB,SAASC,cAAc,wBACrCyB,EAAc1B,SAASC,cAAc,cACrC0B,EAAa3B,SAASC,cAAc,YACpC2B,EAAgB5B,SAASC,cAAc,gBAI7C0B,EAAWP,MAAMS,QAAU,OAC3BF,EAAWP,MAAMU,SAAW,OAC5BH,EAAWP,MAAME,OAAS,SAC1BM,EAAcR,MAAMW,gBAAkB,UACtCH,EAAcR,MAAMS,QAAU,OAC9BD,EAAcR,MAAMY,eAAiB,SACrCJ,EAAcR,MAAMa,QAAU,MAC9BP,EAAYN,MAAME,OAAS,YAC3BI,EAAYN,MAAMS,QAAU,OAI5B,IAAIK,EAAa,EACbC,EAAY,EACZC,EAAW,EACXC,EAAU,GAId,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,WAAY,OACZC,SAAU,KAKZpB,EAAWqB,iBAAiB,UAAUC,IACpCA,EAAEC,iBACFb,EAAa,EACbC,EAAY,EACZhD,EAAYmD,EAAcJ,EAAYT,EAAYuB,OAC/CC,MAAKC,IACqB,IAArBA,EAAOC,WACTf,EAAWc,EAAOC,UAAYD,EAAO3C,KAAKC,OAC1C6B,EAAU,GACVnC,EAAcgD,EAAQb,EAASF,GAC/BnB,IACAU,EAAYN,MAAMS,QAAU,SAE5BH,EAAYN,MAAMS,QAAU,OAC5BuB,MACE,gFAILC,OAAMC,GAASF,MAAME,QAK1B5B,EAAYmB,iBAAiB,SAAS,KAChCV,GAAaoB,KAAKC,KAAKpB,GAAY,IACrCD,GAAa,EACbD,EAAaC,GAEfhD,EAAYmD,EAAcJ,EAAYT,EAAYuB,OAC/CC,MAAKC,IACAf,IAAcoB,KAAKC,KAAKpB,KAC1BV,EAAYN,MAAMS,QAAU,OAC5BuB,MAAM,+DAERlD,EAAcgD,EAAQb,EAASF,GAC/BnB,OAEDqC,OAAMC,GAASF,MAAME","sources":["src/js/fetch-images.js","src/js/create-marckup.js","src/js/gallery-styles.js","src/index.js"],"sourcesContent":["const fetchImages = async (parameters, page, query) => {\n  parameters.set('page', page);\n  parameters.set('q', query.replace(' ', '+'));\n  const response = await fetch(\n    `https://pixabay.com/api/?${parameters.toString()}`\n  );\n  const images = await response.json();\n  return images;\n};\nexport default fetchImages;\n","let marckupTotal = '';\nconst gallery = document.querySelector('.gallery');\nconst createMarckup = (imgList, marckup, pageCount) => {\n  if (pageCount === 1) {\n    marckupTotal = '';\n  }\n\n  for (let i = 0; i < imgList.hits.length; i += 1) {\n    const {\n      // ${}\n      webformatURL,\n      largeImageURL,\n      likes,\n      views,\n      comments,\n      downloads,\n    } = imgList.hits[i];\n    marckup += `<div class=\"photo-card\">\n  <img src=\"${webformatURL}\" width = 250px height = 170px alt=\"photo\" loading=\"lazy\" />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes:</b> ${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views:</b> ${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments:</b> ${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads:</b> ${downloads}\n    </p>\n  </div>\n</div>`;\n  }\n  marckupTotal += marckup;\n  gallery.innerHTML = marckupTotal;\n  return marckup;\n};\nexport default createMarckup;\n","const createGalleryStyles = () => {\n  const galleryCards = document.querySelectorAll('.photo-card');\n  for (const card of galleryCards) {\n    card.style.border = '2px solid black';\n    card.style.margin = '20px 10px 10px 0';\n    card.style.color = 'tomato';\n  }\n};\nexport default createGalleryStyles;\n","'use strict';\n\n//IMPORTS AND REFS\n\nimport fetchImages from './js/fetch-images';\nimport createMarckup from './js/create-marckup';\nimport createGalleryStyles from './js/gallery-styles';\nconst searchForm = document.querySelector('.search-form');\nconst searchQuery = document.querySelector('[name=\"searchQuery\"]');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst galleryBox = document.querySelector('.gallery');\nconst searchFormBox = document.querySelector('.page-header');\n\n// GLOBAL STYLES\n\ngalleryBox.style.display = 'flex';\ngalleryBox.style.flexWrap = 'wrap';\ngalleryBox.style.margin = '0 10vh';\nsearchFormBox.style.backgroundColor = '#3480eb';\nsearchFormBox.style.display = 'flex';\nsearchFormBox.style.justifyContent = 'center';\nsearchFormBox.style.padding = '5px';\nloadMoreBtn.style.margin = '10px auto';\nloadMoreBtn.style.display = 'none';\n\n//GLOBAL VARIABLES\n\nlet pageNumber = 1;\nlet pageCount = 1;\nlet maxPages = 1;\nlet marckup = '';\n\n//UNCHANGEABLE SEARCH PARAMETERS\n\nconst searchParams = new URLSearchParams({\n  key: '30336513-f1d3dcf5d3b6560ebccde30e0',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n  per_page: 40,\n});\n\n//GET IMAGES LIST\n\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  pageNumber = 1;\n  pageCount = 1;\n  fetchImages(searchParams, pageNumber, searchQuery.value)\n    .then(images => {\n      if (images.totalHits !== 0) {\n        maxPages = images.totalHits / images.hits.length;\n        marckup = '';\n        createMarckup(images, marckup, pageCount);\n        createGalleryStyles();\n        loadMoreBtn.style.display = 'flex';\n      } else {\n        loadMoreBtn.style.display = 'none';\n        alert(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n    })\n    .catch(error => alert(error));\n});\n\n//LOAD MORE IMAGES\n\nloadMoreBtn.addEventListener('click', () => {\n  if (pageCount <= Math.ceil(maxPages) - 1) {\n    pageCount += 1;\n    pageNumber = pageCount;\n  }\n  fetchImages(searchParams, pageNumber, searchQuery.value)\n    .then(images => {\n      if (pageCount === Math.ceil(maxPages)) {\n        loadMoreBtn.style.display = 'none';\n        alert(\"We're sorry, but you've reached the end of search results.\");\n      }\n      createMarckup(images, marckup, pageCount);\n      createGalleryStyles();\n    })\n    .catch(error => alert(error));\n});\n"],"names":["$0d54c182c705977b$export$2e2bcd8739ae039","async","parameters","page","query","set","replace","response","fetch","toString","json","$fc9229bc02183fbc$var$marckupTotal","$fc9229bc02183fbc$var$gallery","document","querySelector","$fc9229bc02183fbc$export$2e2bcd8739ae039","imgList","marckup","pageCount","i","hits","length","webformatURL","largeImageURL","likes","views","comments","downloads","innerHTML","$d39e286392831158$export$2e2bcd8739ae039","galleryCards","querySelectorAll","card","style","border","margin","color","$1f0dc3b9307be026$var$searchForm","$1f0dc3b9307be026$var$searchQuery","$1f0dc3b9307be026$var$loadMoreBtn","$1f0dc3b9307be026$var$galleryBox","$1f0dc3b9307be026$var$searchFormBox","display","flexWrap","backgroundColor","justifyContent","padding","$1f0dc3b9307be026$var$pageNumber","$1f0dc3b9307be026$var$pageCount","$1f0dc3b9307be026$var$maxPages","$1f0dc3b9307be026$var$marckup","$1f0dc3b9307be026$var$searchParams","URLSearchParams","key","image_type","orientation","safesearch","per_page","addEventListener","e","preventDefault","value","then","images","totalHits","alert","catch","error","Math","ceil"],"version":3,"file":"index.f88eafc3.js.map"}